---
apiVersion: "v1"
kind: "Namespace"
metadata:
  name: "gremlin"
---
apiVersion: "v1"
kind: "Secret"
metadata:
  name: "gremlin-team-cert"
  namespace: "gremlin"
type: "Opaque"
data:
  gremlin.cert: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJxakNDQVZDZ0F3SUJBZ0lCQVRBS0JnZ3Foa2pPUFFRREFqQlBNU013SVFZRFZRUUREQnBIY21WdGJHbHUKSUVOc2FXVnVkQ0JEWlhKMGFXWnBZMkYwWlRFVE1CRUdBMVVFQ3d3S1NHOXlZU0JrYnlCUlFURVRNQkVHQTFVRQpDZ3dLU0c5eVlTQmtieUJSUVRBZUZ3MHlOREV3TWpFeE5ETTBNREphRncweU5URXdNakV4TkRNME1ESmFNRTh4Ckl6QWhCZ05WQkFNTUdrZHlaVzFzYVc0Z1EyeHBaVzUwSUVObGNuUnBabWxqWVhSbE1STXdFUVlEVlFRTERBcEkKYjNKaElHUnZJRkZCTVJNd0VRWURWUVFLREFwSWIzSmhJR1J2SUZGQk1Ga3dFd1lIS29aSXpqMENBUVlJS29aSQp6ajBEQVFjRFFnQUUyV1VhYlBNUnFKaDhrdll4Zm90UDh4VlhGdzRDMm80NXYrdi9HOU04VDlOYWt6Z0RGWTJyCm1KNmJoaWlieEV0eDdqY0lFamJ6V0RhdlBVUmo3dzhTeXFNZE1Cc3dDUVlEVlIwVEJBSXdBREFPQmdOVkhROEIKQWY4RUJBTUNCNEF3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUxhV2xNc2trYkVsRmNSMk54cU8xZ3RNQlpYZwpoK2tnSlJ4UDg4Tm80cGpMQWlBSGx1R0t0ZXdMell6bjY3WmlOUmJVK3MrVHZWUlhKVFEwS1E1SkdwR3l3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
  gremlin.key: "LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUZkcFN0YVJEb1RlQkRDZG00VVBaYlh6QUU2azBLaWVtM3hmRG1UUTJaeVdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFMldVYWJQTVJxSmg4a3ZZeGZvdFA4eFZYRnc0QzJvNDV2K3YvRzlNOFQ5TmFremdERlkycgptSjZiaGlpYnhFdHg3amNJRWpieldEYXZQVVJqN3c4U3lnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo="
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app.kubernetes.io/instance: "chao"
    app.kubernetes.io/name: "chao"
    helm.sh/chart: "gremlin-0.17.1"
    app.kubernetes.io/version: "1"
  name: "chao"
  namespace: "gremlin"
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: "25%"
    type: "RollingUpdate"
  selector:
    matchLabels:
      app.kubernetes.io/instance: "chao"
      app.kubernetes.io/name: "chao"
      app.kubernetes.io/version: "1"
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: "chao"
        app.kubernetes.io/name: "chao"
        helm.sh/chart: "gremlin-0.17.1"
        app.kubernetes.io/version: "1"
    spec:
      serviceAccountName: "chao"
      containers:
      - image: "gremlin/chao:latest"
        args:
        - "-team_id"
        - "cea0b46c-9b07-4497-a0b4-6c9b075497ed"
        - "-cert_path"
        - "/var/lib/gremlin/cert/gremlin.cert"
        - "-key_path"
        - "/var/lib/gremlin/cert/gremlin.key"
        - "-api_url"
        - "https://api.gremlin.com/v1"
        - "-cluster_id"
        - "cluster-bcda5164"
        imagePullPolicy: "Always"
        name: "chao"
        volumeMounts:
        - name: "gremlin-cert"
          mountPath: "/var/lib/gremlin/cert"
          readOnly: true
      volumes:
      - name: "gremlin-cert"
        secret:
          secretName: "gremlin-team-cert"
---
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  name: "chao"
  namespace: "gremlin"
---
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  name: "gremlin"
  namespace: "gremlin"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRole"
metadata:
  name: "gremlin-watcher"
rules:
- apiGroups:
  - "apps"
  resources:
  - "replicasets"
  - "deployments"
  - "statefulsets"
  - "daemonsets"
  verbs:
  - "get"
  - "watch"
  - "list"
- apiGroups:
  - ""
  resources:
  - "pods"
  - "nodes"
  - "services"
  - "namespaces"
  - "replicationcontrollers"
  verbs:
  - "get"
  - "watch"
  - "list"
- apiGroups:
  - "apps.openshift.io"
  resources:
  - "deploymentconfigs"
  verbs:
  - "get"
  - "watch"
  - "list"
- apiGroups:
  - "networking.k8s.io"
  resources:
  - "ingresses"
  verbs:
  - "get"
  - "watch"
  - "list"
- apiGroups:
  - "argoproj.io"
  resources:
  - "rollouts"
  verbs:
  - "get"
  - "list"
  - "watch"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRole"
metadata:
  name: "gremlin-node-metadata-reader"
rules:
- apiGroups:
  - ""
  resources:
  - "nodes"
  verbs:
  - "get"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: "chao"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "ClusterRole"
  name: "gremlin-watcher"
subjects:
- kind: "ServiceAccount"
  name: "chao"
  namespace: "gremlin"
---
apiVersion: "rbac.authorization.k8s.io/v1"
kind: "ClusterRoleBinding"
metadata:
  name: "gremlin"
roleRef:
  apiGroup: "rbac.authorization.k8s.io"
  kind: "ClusterRole"
  name: "gremlin-node-metadata-reader"
subjects:
- kind: "ServiceAccount"
  name: "gremlin"
  namespace: "gremlin"
---
apiVersion: "apps/v1"
kind: "DaemonSet"
metadata:
  name: "gremlin"
  namespace: "gremlin"
  labels:
    app.kubernetes.io/name: "gremlin"
    helm.sh/chart: "gremlin-0.17.1"
    app.kubernetes.io/instance: "gremlin"
    app.kubernetes.io/managed-by: "Helm"
    version: "v1"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "gremlin"
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "gremlin"
        helm.sh/chart: "gremlin-0.17.1"
        app.kubernetes.io/instance: "gremlin"
        app.kubernetes.io/managed-by: "Helm"
        version: "v1"
    spec:
      serviceAccountName: "gremlin"
      hostPID: true
      hostNetwork: true
      containers:
      - name: "gremlin"
        image: "gremlin/gremlin:latest"
        args:
        - "daemon"
        imagePullPolicy: "Always"
        securityContext:
          privileged: false
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - "KILL"
            - "NET_ADMIN"
            - "SYS_BOOT"
            - "SYS_TIME"
            - "DAC_READ_SEARCH"
            - "SYS_RESOURCE"
            - "SYS_ADMIN"
            - "SYS_PTRACE"
            - "SETFCAP"
            - "AUDIT_WRITE"
            - "MKNOD"
            - "SYS_CHROOT"
            - "NET_RAW"
        env:
        - name: "GREMLIN_TEAM_ID"
          value: "cea0b46c-9b07-4497-a0b4-6c9b075497ed"
        - name: "GREMLIN_TEAM_PRIVATE_KEY_OR_FILE"
          value: "file:///var/lib/gremlin/cert/gremlin.key"
        - name: "GREMLIN_TEAM_CERTIFICATE_OR_FILE"
          value: "file:///var/lib/gremlin/cert/gremlin.cert"
        - name: "GREMLIN_SERVICE_URL"
          value: "https://api.gremlin.com/v1"
        - name: "GREMLIN_IDENTIFIER"
          valueFrom:
            fieldRef:
              fieldPath: "spec.nodeName"
        - name: "GREMLIN_DOCKER_IMAGE"
          value: "gremlin/gremlin:latest"
        - name: "GREMLIN_COLLECT_PROCESSES"
          value: "false"
        - name: "GREMLIN_COLLECT_DNS"
          value: "true"
        volumeMounts:
        - name: "gremlin-state"
          mountPath: "/var/lib/gremlin"
          readOnly: false
        - name: "gremlin-logs"
          mountPath: "/var/log/gremlin"
          readOnly: false
        - name: "cgroup-root"
          mountPath: "/sys/fs/cgroup"
          readOnly: false
        - name: "containerd-sock"
          mountPath: "/run/containerd/containerd.sock"
          readOnly: true
        - name: "crio-sock"
          mountPath: "/run/crio/crio.sock"
          readOnly: true
        - name: "docker-sock"
          mountPath: "/var/run/docker.sock"
          readOnly: true
        - name: "gremlin-cert"
          mountPath: "/var/lib/gremlin/cert"
          readOnly: true
      volumes:
      - name: "cgroup-root"
        hostPath:
          path: "/sys/fs/cgroup"
      - name: "containerd-sock"
        hostPath:
          path: "/run/containerd/containerd.sock"
      - name: "crio-sock"
        hostPath:
          path: "/run/crio/crio.sock"
      - name: "docker-sock"
        hostPath:
          path: "/var/run/docker.sock"
      - name: "gremlin-state"
        hostPath:
          path: "/var/lib/gremlin"
      - name: "gremlin-logs"
        hostPath:
          path: "/var/log/gremlin"
      - name: "gremlin-cert"
        secret:
          secretName: "gremlin-team-cert"
